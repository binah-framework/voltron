import Data.ByteString (ByteString)

Invitation
  code Text
  emailAddress Text
  firstName Text
  lastName Text
  accepted Bool
  emailStatus String
  emailError String Maybe

  insert {\invitation viewer ->
    not (invitationAccepted invitation)
    && IsInstructor viewer
    && emailStatus invitation == "not_sent"
  }

  update [ accepted ] {\old new _ ->
    not (invitationAccepted old) && invitationAccepted new
  }

  update [ emailStatus ] {\_ new _ ->
     IsInstructor viewer
     && (emailStatus new == "sent" || emailStatus new == "error")
  }

User
  emailAddress  Text
  password      ByteString
  firstName     Text
  lastName      Text
  admin         Bool

  UniqueEmailAddress emailAddress

  insert {\new viewer -> IsInstructor viewer }
  read   [ password ] @IsSelf
  update [ password, level, emailAddress ] {\_ _ _ -> False}
  update [ firstName, lastName ] {\old _ viewer -> IsSelf old viewer}

Class 
  institution Text
  name        Text
  instructor  UserId

  UniqueInstClass institution name

Group
  name       Text
  editorLink Text
  class      ClassId

  UniqueGroupClass name class

  insert {\_ viewer -> IsInstructor viewer}
  update [ name, editorLink ] {\_ _ viewer -> IsInstructor viewer}

Enroll
  student    UserId      
  class      ClassId
  group      GroupId
  
  UniqueEnroll student class

ResetPassword 
  email Text
  code  Text
  valid Bool
  UniqueReset code 

policy IsSelf = \user viewer ->
  viewer == user

policy IsInstructor = \user ->
  userLevel user == "instructor"
