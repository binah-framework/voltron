import Data.ByteString (ByteString)

------------------------------------------------------------------------------------------
predicate isInstructor :: ClassId -> UserId -> Bool 
predicate isStudent    :: ClassId -> UserId -> GroupId -> Bool 
predicate isAdmin      :: UserId -> Bool
------------------------------------------------------------------------------------------
policy IsClassInstructor = \r viewer ->
  isInstructor (groupClass r) (entityKey viewer)

policy IsGroupStudent = \r viewer ->
  isStudent (groupClass r) (entityKey viewer) (entityKey r)

policy IsSelf = \user viewer ->
  viewer == user

policy IsAdmin = \_ viewer ->
  isAdmin (entityKey viewer)

policy IsClassInstructorClass = \r _ viewer -> 
  isInstructor (entityKey r) (entityKey viewer) 

------------------------------------------------------------------------------------------

User
  emailAddress  Text
  password      ByteString
  firstName     Text
  lastName      Text
  theme         Text
  keyBinds      Text
  admin         Bool

  UniqueEmailAddress emailAddress
  assert { admin => isAdmin entityKey } 
  insert {\new viewer -> IsInstructor viewer }
  read   [ password ] @IsSelf
  update [ password, level, emailAddress ] {\_ _ _ -> False}
  update [ firstName, lastName ] {\old _ viewer -> IsSelf old viewer}

Class 
  institution Text
  name        Text
  instructor  UserId
  editorLang  Text
  
  UniqueInstClass institution name
  assert { isInstructor entityKey instructor }
  insert @IsAdmin
  update [ editorLang ] @IsClassInstructorClass

Group
  name       Text
  editorLink Text 
  class      ClassId

  UniqueGroupClass name class

  insert @IsClassInstructor
  read   [ editorLink ]       { \r v -> IsClassInstructor r v || IsGroupStudent r v  }
  update [ name, editorLink ] {\r _ viewer -> IsClassInstructor r viewer}
  update [ class ]            {\_ _ _ -> False }

Enroll
  student    UserId      
  class      ClassId
  group      GroupId

  UniqueEnroll student class

  assert { isStudent class student group }
  insert { \r viewer -> isInstructor (enrollClass r) (entityKey viewer)}
  update [ student, class ]  { \_ _ _ -> False }
  read   [ student, group ]  { \r viewer -> isClassInstructor (enrollClass r) (entityKey viewer) || 
                                    isStudent (enrollClass r) (entityKey viewer) (enrollGroup r)
                             }

ResetPassword 
  email Text
  code  Text
  valid Bool
  UniqueReset code 